<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat.manage.shipped.dao.ShippedDao">

	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"></cache>

	<resultMap type="com.cat.manage.shipped.domain.Shipped" id="ShippedResultMap">
		<id property="id" column="id"/>
		<result property="headId" column="head_id"/>
		<result property="checkId" column="check_id"/>
		<result property="trackingNumber" column="tracking_number"/>
		<result property="transferCompany" column="transfer_company"/>
		<result property="brandId" column="brand_id"/>
		<result property="seriesId" column="series_id"/>
		<result property="singleId" column="single_id"/>	
		<result property="num" column="num"/>
		<result property="storeNum" column="store_num"/>
		<result property="unitPrice" column="unit_price"/>
		<result property="payby" column="payby"/>
		<result property="planRmb" column="plan_rmb"/>
		<result property="planPostage" column="plan_postage"/>	
		<result property="planCost" column="plan_cost"/>
		<result property="remark" column="remark"/>
		<result property="shippedStatus" column="shipped_status"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="createDateFormat" column="createDateFormat"/>	
		<result property="updateDateFormat" column="updateDateFormat"/>	
		<result property="brandName" column="brand_name"/>	
		<result property="seriesName" column="series_name"/>	
		<result property="singleName" column="single_name"/>
		<result property="brandEname" column="brand_ename"/>
		<result property="singleEname" column="single_ename"/>
		<result property="sumPrice" column="sumprice"/>
		<result property="weight" column="weight"/>
	</resultMap>
	
	<!-- 添加邮寄清单（子单） -->
	<insert id="addShipped">
	insert into t_shipped(head_id, check_id, tracking_number, transfer_company, brand_id, series_id, single_id, num, unit_price, payby, plan_rmb, plan_postage, plan_cost, remark, shipped_status, create_date, update_date, weight)
	values(#{param1.id}, #{param3.id}, #{param3.trackingNumber}, #{param3.transferCompany}, #{param3.brandId}, #{param3.seriesId}, #{param3.singleId}, #{param3.num}, #{param3.unitPrice}, #{param3.payby}, #{param2.planRmb}, #{param2.planPostage}, #{param2.planCost}, #{param3.remark}, #{param2.shippedStatus}, now(), now(), #{param2.weight})
	</insert>
	
	<!-- 修改邮寄清单（子单） -->
	<update id="updateShipped" parameterType="com.cat.manage.shipped.domain.Shipped">
	update t_shipped set update_date=now() 
	<if test="headId != null and headId != ''">
		, head_id = #{headId}
	</if>
	<if test="trackingNumber != null and trackingNumber != ''">
		, tracking_number = #{trackingNumber}
	</if>
	<if test="transferCompany != null and transferCompany != ''">
		, transfer_company = #{transferCompany}
	</if>
	<if test="planRmb != null and planRmb != ''">
		, plan_rmb = #{planRmb}
	</if>
	<if test="planPostage != null and planPostage != ''">
		, plan_postage = #{planPostage}
	</if>
	<if test="planCost != null and planCost != ''">
		, plan_cost = #{planCost}
	</if>
	<if test="remark != null and remark != ''">
		, remark = #{remark}
	</if>
	<if test="shippedStatus != null and shippedStatus != ''">
		, shipped_status = #{shippedStatus}
	</if>
	<if test="weight != null and weight != ''">
		, weight = #{weight}
	</if>
	<if test="num != null">
		, num = #{num}
	</if>
	<if test="storeNum != null">
		, store_num = #{storeNum}
	</if>
	<if test="brandId != null">
		, brand_id = #{brandId}
	</if>
	<if test="seriesId != null">
		, series_id = #{seriesId}
	</if>
	<if test="singleId != null">
		, single_id = #{singleId}
	</if>
	where id = #{id}
	</update>
	
	<!-- 根据下单清单唯一编号修改邮寄清单内容  -->
	<update id="updateShippedByCheckId" parameterType="com.cat.manage.shipped.domain.Shipped">
	update t_shipped set update_date=now() 
	<if test="trackingNumber != null and trackingNumber != ''">
		, tracking_number = #{trackingNumber}
	</if>
	<if test="transferCompany != null and transferCompany != ''">
		, transfer_company = #{transferCompany}
	</if>
	<if test="num != null">
		, num = #{num}
	</if>
	<if test="brandId != null">
		, brand_id = #{brandId}
	</if>
	<if test="seriesId != null">
		, series_id = #{seriesId}
	</if>
	<if test="singleId != null">
		, single_id = #{singleId}
	</if>
	<if test="unitPrice != null and unitPrice != ''">
		, unit_price = #{unitPrice}
	</if>
	<if test="payby != null and payby != ''">
		, payby = #{payby}
	</if>
	<if test="shippedStatus != null and shippedStatus != ''">
		, shipped_status = #{shippedStatus}
	</if>
	where check_id = #{checkId}
	</update>
	
	<!-- 根据邮寄清单子单编号修改清单状态） -->
	<update id="updateShippedForStatus">
	update t_shipped set update_date=now() 
	<if test="param2 != null and param2 != ''">
		, shipped_status = #{param2}
	</if>
	where id in
	<foreach collection="param1" item="id" open="(" separator="," close=")">#{id}</foreach>
	</update>
	
	<!-- 根据邮寄清单子单唯一编号删除记录 -->
	<delete id="deleteShipped" parameterType="java.lang.Integer">
	delete from t_shipped where id = #{id} 
	</delete>
	
	<!-- 根据下单清单唯一编号删除记录 -->
	<delete id="deleteShippedByCheckId" parameterType="java.lang.Integer">
	delete from t_shipped where check_id = #{checkId} 
	</delete>
	
	<!-- 根据邮寄清单主单唯一编号删除子单信息 -->
	<delete id="deleteShippedByHeadId" parameterType="java.lang.Integer">
	delete from t_shipped where head_id = #{headId} 
	</delete>
	
	<!-- 根据邮寄清单子单唯一编号，批量删除记录 -->
	<delete id="deleteShippedByIds">
	delete from t_shipped where id in 
	<foreach collection="array" item="id" open="(" separator="," close=")">#{id}</foreach>
	</delete>
	
	<!-- 查询邮寄清单子单信息 -->
	<select id="queryShipped" resultMap="ShippedResultMap">
	select t.id, t.head_id, t.check_id, t.tracking_number, t.transfer_company, t.brand_id, t.series_id, t.single_id, t.num, t.store_num, t.unit_price, t.payby, t.plan_rmb, t.plan_postage, t.plan_cost, t.remark, t.shipped_status, t.create_date, t.update_date, IFNULL(t.weight, 0) as weight, date_format(t.create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(t.update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name,tse.series_name as series_name ,tsp.single_name as single_name ,tb.brand_ename as brand_ename
    ,tsp.single_ename as single_ename, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where 1=1
	<if test="trackingNumber != null and trackingNumber != ''">
		and t.tracking_number = #{trackingNumber}
	</if>
	<if test="transferCompany != null and transferCompany != ''">
		and t.transfer_company = #{transferCompany}
	</if>
	<if test="checkId != null and checkId != ''">
		and t.check_id = #{checkId}
	</if>
	<if test="headId != null and headId != ''">
		and t.head_id = #{headId}
	</if>
	<if test="shippedStatus != null and shippedStatus != ''">
		and t.shipped_status = #{shippedStatus}
	</if>
	<if test="id != null and id != ''">
		and t.id = #{id}
	</if>
	order by t.create_date desc
	</select>
	
	<!-- 根据邮寄清单主单唯一编号查询子订单 -->
	<select id="queryShippedByHeadId" resultMap="ShippedResultMap">
	select t.id, t.head_id, t.check_id, t.tracking_number, t.transfer_company, t.brand_id, t.series_id, t.single_id, t.num, t.store_num, t.unit_price, t.payby, t.plan_rmb, t.plan_postage, t.plan_cost, t.remark, t.shipped_status, t.create_date, t.update_date, IFNULL(t.weight, 0) as weight, date_format(t.create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(t.update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name,tse.series_name as series_name ,tsp.single_name as single_name ,tb.brand_ename as brand_ename
    ,tsp.single_ename as single_ename, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where head_id = #{headId}
	</select>
	
	<!-- 根据邮寄清单子单唯一编号查询子单信息 -->
	<select id="queryShippedByIds" resultMap="ShippedResultMap">
	select t.id, t.head_id, t.check_id, t.tracking_number, t.transfer_company, t.brand_id, t.series_id, t.single_id, t.num, t.store_num, t.unit_price, t.payby, t.plan_rmb, t.plan_postage, t.plan_cost, t.remark, t.shipped_status, t.create_date, t.update_date, IFNULL(t.weight, 0) as weight, date_format(t.create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(t.update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name,tse.series_name as series_name ,tsp.single_name as single_name ,tb.brand_ename as brand_ename
    ,tsp.single_ename as single_ename, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where id in
	<foreach collection="array" item="id" open="(" separator="," close=")">#{id}</foreach>
	</select>
	
	<!-- 根据邮寄清单子单唯一编号查询单条信息 -->
	<select id="queryShippedById" parameterType="java.lang.Integer" resultMap="ShippedResultMap">
	select t.id, t.head_id, t.check_id, t.tracking_number, t.transfer_company, t.brand_id, t.series_id, t.single_id, t.num, t.store_num, t.unit_price, t.payby, t.plan_rmb, t.plan_postage, t.plan_cost, t.remark, t.shipped_status, t.create_date, t.update_date, IFNULL(t.weight, 0) as weight, date_format(t.create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(t.update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name,tse.series_name as series_name ,tsp.single_name as single_name ,tb.brand_ename as brand_ename
    ,tsp.single_ename as single_ename, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where id = #{id}
	</select>
	
	<!-- 根据邮寄单号查询与该物品相同品牌，系列的历史最近一条拥有重量的历史数据 -->
	<select id="queryShippedWeightForPlan" parameterType="java.lang.Integer" resultMap="ShippedResultMap">
	select IFNULL(t1.weight, 0) as weight, t2.id from t_shipped t1, t_shipped t2 where t1.brand_id = t2.brand_id and t1.series_id = t2.series_id and 
	t1.single_id = t2.single_id  and (t1.weight is not null or t1.weight != 0) and t2.id = #{id}
	order by t1.update_date DESC limit 1
	</select>
	
	<!-- 用于同步的邮寄清单查询，仅查询 品牌 ，系列 ， 单品，唯一编号，下单唯一编号 -->
	<select id="queryShippedForSync" resultMap="ShippedResultMap">
	select t.id, t.head_id, t.check_id, t.tracking_number, t.transfer_company, t.brand_id, t.series_id, t.single_id, t.num, t.store_num, t.unit_price, t.payby, t.plan_rmb, t.plan_postage, t.plan_cost, t.remark, t.shipped_status, t.create_date, t.update_date, IFNULL(t.weight, 0) as weight, date_format(t.create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(t.update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name,tse.series_name as series_name ,tsp.single_name as single_name ,tb.brand_ename as brand_ename
    ,tsp.single_ename as single_ename, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where 1=1
	<if test="trackingNumber != null and trackingNumber != ''">
		and t.tracking_number = #{trackingNumber}
	</if>
	<if test="transferCompany != null and transferCompany != ''">
		and t.transfer_company = #{transferCompany}
	</if>
	<if test="checkId != null and checkId != ''">
		and t.check_id = #{checkId}
	</if>
	<if test="headId != null and headId != ''">
		and t.head_id = #{headId}
	</if>
	<if test="shippedStatus != null and shippedStatus != ''">
		and t.shipped_status = #{shippedStatus}
	</if>
	<if test="id != null and id != ''">
		and t.id = #{id}
	</if>
	<if test="brandId != null and brandId != ''">
		and t.brand_id = #{brandId}
	</if>
	<if test="seriesId != null and seriesId != ''">
		and t.series_id = #{seriesId}
	</if>
	<if test="singleId != null and singleId != ''">
		and t.single_id = #{singleId}
	</if>
	order by t.create_date desc
	</select>
	
	<!-- 根据下单清单唯一编号查询邮寄清单 -->
	<select id="queryShippedByCheckId" parameterType="java.lang.Integer" resultMap="ShippedResultMap">
	select t.id, t.head_id, t.check_id, t.tracking_number, t.transfer_company, t.brand_id, t.series_id, t.single_id, t.num, t.store_num, t.unit_price, t.payby, t.plan_rmb, t.plan_postage, t.plan_cost, t.remark, t.shipped_status, t.create_date, t.update_date, IFNULL(t.weight, 0) as weight, date_format(t.create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(t.update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name,tse.series_name as series_name ,tsp.single_name as single_name ,tb.brand_ename as brand_ename
    ,tsp.single_ename as single_ename, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where t.check_id = #{checkId}
	</select>
</mapper>