<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat.manage.selled.dao.SelledDao">

	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"></cache>

	<resultMap type="com.cat.manage.selled.domain.Selled" id="SelledResultMap">
		<id property="id" column="id"/>
		<result property="storeId" column="store_id"/>
		<result property="checkId" column="check_id"/>
		<result property="brandId" column="brand_id"/>
		<result property="seriesId" column="series_id"/>
		<result property="singleId" column="single_id"/>
		<result property="sellNum" column="sell_num"/>
		<result property="unitPrice" column="unit_price"/>
		<result property="payby" column="payby"/>
		<result property="unitRmb" column="unit_rmb"/>
		<result property="unitPostage" column="unit_postage"/>
		<result property="unitCost" column="unit_cost"/>
		<result property="sellingPrice" column="selling_price"/>
		<result property="refund" column="refund"/>
		<result property="remark" column="remark"/>
		<result property="sellTime" column="sell_time"/>
		<result property="selledStatus" column="selled_status"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="createDateFormat" column="createDateFormat"/>
		<result property="updateDateFormat" column="updateDateFormat"/>
		<result property="brandName" column="brand_name"/>
		<result property="seriesName" column="series_name"/>
		<result property="singleName" column="single_name"/>
		<result property="sumPrice" column="sumPrice"/>
		<result property="brandEname" column="brand_ename"/>
		<result property="singleEname" column="single_name"/>
	</resultMap>
	
	
	<!-- 添加售出记录 -->
	<insert id="addSelled">
	insert into t_selled(store_id, check_id, brand_id, series_id, single_id, sell_num, unit_price, payby, unit_rmb, unit_postage, unit_cost, selling_price, refund, remark, sell_time, selled_status, create_date, update_date)
	values(#{param2.id}, #{param2.checkId}, #{param2.brandId}, #{param2.seriesId}, #{param2.singleId}, #{param1.sellNum}, #{param2.unitPrice}, #{param2.payby}, #{param2.unitRmb}, #{param2.unitPostage}, #{param2.unitCost}, #{param1.sellingPrice}, #{param1.refund}, #{param1.remark}, #{param1.sellTime}, #{param1.selledStatus}, now(), now());
	</insert>
	
	<!-- 修改售出记录 -->
	<update id="updateSelled" parameterType="com.cat.manage.selled.domain.Selled">
	update t_selled set update_date = now()
	<if test="sellNum != null">
	, sell_num = #{sellNum}
	</if>
	<if test="sellingPrice != null and sellingPrice != ''">
	, selling_price = #{sellingPrice}
	</if>
	<if test="refund != null">
	, refund = #{refund}
	</if>
	<if test="remark != null and remark != ''">
	, remark = #{remark}
	</if>
	<if test="sellTime != null and sellTime != ''">
	, sell_time = #{sellTime}
	</if>
	where id = #{id}
	</update>
	
	<!-- 修改售出记录(可修改状态) -->
	<update id="updateSelledForStatus" parameterType="com.cat.manage.selled.domain.Selled">
	update t_selled set update_date = now()
	<if test="sellNum != null">
	, sell_num = #{sellNum}
	</if>
	<if test="sellingPrice != null and sellingPrice != ''">
	, selling_price = #{sellingPrice}
	</if>
	<if test="refund != null">
	, refund = #{refund}
	</if>
	<if test="remark != null and remark != ''">
	, remark = #{remark}
	</if>
	<if test="selledStatus != null and selledStatus != ''">
	, selled_status = #{selledStatus}
	</if>
	<if test="sellTime != null and sellTime != ''">
	, sell_time = #{sellTime}
	</if>
	where id = #{id}
	</update>
	
	<!-- 根据售出清单唯一编号删除记录 -->
	<delete id="deleteSelledById" parameterType="java.lang.Integer">
	delete from t_selled where id = #{id} 
	</delete>
	
	<!-- 根据售出清单的下单清单唯一编号删除记录 -->
	<delete id="deleteSelledByCheckId" parameterType="java.lang.Integer">
	delete from t_selled where check_id = #{checkId} 
	</delete>
	
	<!-- 查询售出清单记录 -->
	<select id="querySelled" resultMap="SelledResultMap">
	select t.id, t.store_id, t.check_id, t.brand_id, t.series_id, t.single_id, t.sell_num, t.unit_price, t.payby, t.unit_rmb, t.unit_postage, t.unit_cost, t.selling_price, IFNULL(t.refund, 0) as refund, t.remark, t.sell_time, t.selled_status, t.create_date, t.update_date, DATE_FORMAT(t.create_date,'%Y年%m月%d日 %T') as createDateFormat, DATE_FORMAT(t.update_date,'%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name ,tse.series_name as series_name ,tsp.single_name as single_name
	,tb.brand_ename as brand_ename ,tsp.single_ename as single_ename
	,FORMAT((IFNULL(t.sell_num,0)*IFNULL(t.selling_price,0)), 2) as sumPrice
	from t_selled t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where 1=1
	<if test="param1.brandId != null and param1.brandId != ''">
	and brand_id = #{param1.brandId}
	</if>
	<if test="param1.seriesId != null and param1.seriesId != ''">
	and series_id = #{param1.seriesId}
	</if>
	<if test="param1.singleId != null and param1.singleId != ''">
	and single_id = #{param1.singleId}
	</if>
	<if test="param1.payby != null and param1.payby != ''">
	and payby = #{param1.payby}
	</if>
	<if test="param1.sellTime != null and param1.sellTime != ''">
	and sell_time = #{param1.sellTime}
	</if>
	<if test="param1.selledStatus != null and param1.selledStatus != ''">
	and selled_status = #{param1.selledStatus}
	</if>
	<if test="param2 != null and param2 != ''">
	and sell_time &gt;= #{param2}
	</if>
	<if test="param3 != null and param3 != ''">
	and sell_time &lt;= #{param3}
	</if>
	order by sell_time desc , tb.brand_ename 
	</select>
	
	<!-- 根据售出清单唯一编号（多个）查询记录 -->
	<select id="querySelledByIds" resultMap="SelledResultMap">
	select t.id, t.store_id, t.check_id, t.brand_id, t.series_id, t.single_id, t.sell_num, t.unit_price, t.payby, t.unit_rmb, t.unit_postage, t.unit_cost, t.selling_price, IFNULL(t.refund, 0) as refund, t.remark, t.sell_time, t.selled_status, t.create_date, t.update_date, DATE_FORMAT(t.create_date,'%Y年%m月%d日 %T') as createDateFormat, DATE_FORMAT(t.update_date,'%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name ,tse.series_name as series_name ,tsp.single_name as single_name
	,tb.brand_ename as brand_ename ,tsp.single_ename as single_ename
	,(IFNULL(sell_num,0)*IFNULL(selling_price,0)) as sumPrice
	from t_selled t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where id in
	<foreach collection="array" item="id" open="(" separator="," close=")">#{id}</foreach>
	</select>
	
	<!-- 根据售出清单唯一编号查询记录 -->
	<select id="querySelledById" parameterType="java.lang.Integer" resultMap="SelledResultMap">
	select t.id, t.store_id, t.check_id, t.brand_id, t.series_id, t.single_id, t.sell_num, t.unit_price, t.payby, t.unit_rmb, t.unit_postage, t.unit_cost, t.selling_price, IFNULL(t.refund, 0) as refund, t.remark, t.sell_time, t.selled_status, t.create_date, t.update_date, DATE_FORMAT(t.create_date,'%Y年%m月%d日 %T') as createDateFormat, DATE_FORMAT(t.update_date,'%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name ,tse.series_name as series_name ,tsp.single_name as single_name
	,tb.brand_ename as brand_ename ,tsp.single_ename as single_ename
	,(IFNULL(sell_num,0)*IFNULL(selling_price,0)) as sumPrice
	from t_selled t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where id = #{id}
	</select>
	
	<!-- 根据下单清单唯一编号查询记录 -->
	<select id="querySelledByCheckId" parameterType="java.lang.Integer" resultMap="SelledResultMap">
	select t.id, t.store_id, t.check_id, t.brand_id, t.series_id, t.single_id, t.sell_num, t.unit_price, t.payby, t.unit_rmb, t.unit_postage, t.unit_cost, t.selling_price, IFNULL(t.refund, 0) as refund, t.remark, t.sell_time, t.selled_status, t.create_date, t.update_date, DATE_FORMAT(t.create_date,'%Y年%m月%d日 %T') as createDateFormat, DATE_FORMAT(t.update_date,'%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name ,tse.series_name as series_name ,tsp.single_name as single_name
	,tb.brand_ename as brand_ename ,tsp.single_ename as single_ename
	,(IFNULL(sell_num,0)*IFNULL(selling_price,0)) as sumPrice
	from t_selled t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where check_id = #{checkId}
	</select>
	
	<!-- 根据邮寄清单唯一编号查询记录 -->
	<select id="querySelledByShippedId" parameterType="java.lang.Integer" resultMap="SelledResultMap">
	select t.id, t.store_id, t.check_id, t.brand_id, t.series_id, t.single_id, t.sell_num, t.unit_price, t.payby, t.unit_rmb, t.unit_postage, t.unit_cost, t.selling_price, IFNULL(t.refund, 0) as refund, t.remark, t.sell_time, t.selled_status, t.create_date, t.update_date, DATE_FORMAT(t.create_date,'%Y年%m月%d日 %T') as createDateFormat, DATE_FORMAT(t.update_date,'%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name ,tse.series_name as series_name ,tsp.single_name as single_name
	,tb.brand_ename as brand_ename ,tsp.single_ename as single_ename
	,(IFNULL(sell_num,0)*IFNULL(selling_price,0)) as sumPrice
	from t_selled t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where shipped_id = #{shippedId}
	</select>
	
	<!-- 根据下单清单唯一编号(多个)查询记录 -->
	<select id="querySelledByCheckIds" resultMap="SelledResultMap">
	select t.id, t.store_id, t.check_id, t.brand_id, t.series_id, t.single_id, t.sell_num, t.unit_price, t.payby, t.unit_rmb, t.unit_postage, t.unit_cost, t.selling_price, IFNULL(t.refund, 0) as refund, t.remark, t.sell_time, t.selled_status, t.create_date, t.update_date, DATE_FORMAT(t.create_date,'%Y年%m月%d日 %T') as createDateFormat, DATE_FORMAT(t.update_date,'%Y年%m月%d日 %T') as updateDateFormat
	,tb.brand_name as brand_name ,tse.series_name as series_name ,tsp.single_name as single_name
	,tb.brand_ename as brand_ename ,tsp.single_ename as single_ename
	,(IFNULL(sell_num,0)*IFNULL(selling_price,0)) as sumPrice
	from t_selled t
	left join t_brand tb on tb.brand_id = t.brand_id
	left join t_series tse on tse.series_id = t.series_id
	left join t_singleproduct tsp on tsp.single_id = t.single_id
	where check_id in 
	<foreach collection="array" item="checkId" open="(" separator="," close=")">#{checkId}</foreach>
	</select>
	
</mapper>