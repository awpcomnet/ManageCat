<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat.manage.base.dao.SeriesDao">

	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"></cache>

	<resultMap type="com.cat.manage.base.domain.Series" id="seriesResultMap">
		<id property="seriesId" column="series_id"/>
		<result property="seriesName" column="series_name"/>
		<result property="seriesEname" column="series_ename"/>
		<result property="ofOrigin" column="of_origin"/>
		<result property="isUse" column="is_use"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="createBy" column="create_by"/>
		<result property="updateBy" column="update_by"/>
		<result property="createDateFormat" column="createDateFormat"/>
		<result property="updateDateFormat" column="updateDateFormat"/>
		<result property="ofOriginName" column="of_origin_name"/>
		<result property="ofOriginEname" column="of_origin_ename"/>
	</resultMap>
	
	<!-- 添加系列信息 -->
	<insert id="addSeries" parameterType="com.cat.manage.base.domain.Series">
		insert into t_series(series_name, series_ename, of_origin, is_use, create_date, create_by, update_date, update_by)
		values(#{seriesName}, #{seriesEname}, #{ofOrigin}, #{isUse}, now(), 'system', now(), 'system')
	</insert>
	
	<!-- 修改系列信息 -->
	<update id="updateSeries" parameterType="com.cat.manage.base.domain.Series">
		update t_series set update_date=now() , update_by = 'system'
		<if test="seriesName != null and seriesName != ''">
			, series_name = #{seriesName}
		</if>
		<if test="seriesEname != null and seriesEname != ''">
			, series_ename = #{seriesEname}
		</if>
		<if test="ofOrigin != null and ofOrigin != ''">
			, of_origin = #{ofOrigin}
		</if>
		<if test="isUse != null and isUse != ''">
			, is_use = #{isUse}
		</if>
		where series_id = #{seriesId}
	</update>
	
	<!-- 删除系列信息 -->
	<delete id="deleteSeries" parameterType="java.lang.Integer">
		delete from t_series where series_id = #{seriesId}
	</delete>
	
	<!-- 根据品牌编号删除系列 -->
	<delete id="deleteSeriesByBrandId" parameterType="java.lang.Integer">
		delete from t_series where of_origin = #{brandId}
	</delete>
	
	<!-- 查询系列信息 -->
	<select id="querySeries" resultMap="seriesResultMap">
		select series_id, series_name, series_ename, of_origin, (select brand_name from t_brand where brand_id = t_series.of_origin) as of_origin_name
		, (select brand_ename from t_brand where brand_id = t_series.of_origin) as of_origin_ename
		, is_use, create_date, create_by, update_date, update_by, date_format(create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(update_date, '%Y年%m月%d日 %T') as updateDateFormat 
		from t_series where 1=1
		<if test="param1.ofOrigin != null and param1.ofOrigin != ''">
			and of_origin = #{param1.ofOrigin}
		</if>
		<if test="param1.isUse != null and param1.isUse != ''">
			and is_use = #{param1.isUse}
		</if>
		<if test="param1.seriesName != null and param1.seriesName != ''">
			and series_name like '%${param1.seriesName}%'
		</if>
		<if test="param1.seriesEname != null and param1.seriesEname != ''">
			and series_ename like '%${param1.seriesEname}%' 
		</if>
		<if test="param2 != null and param2 != ''">
			order by ${param2} asc
		</if>
		<if test="param2 == null or param2 == ''">
			order by create_date desc
		</if>
	</select>
	
	<!-- 查询系列（仅用于通过系列名称或英文名称精确查询，但不区分大小写）排除自身 -->
	<select id="querySeriesAccurateForName" parameterType="com.cat.manage.base.domain.Series" resultMap="seriesResultMap">
		select series_id, series_name, series_ename, of_origin, (select brand_name from t_brand where brand_id = t_series.of_origin) as of_origin_name
		, (select brand_ename from t_brand where brand_id = t_series.of_origin) as of_origin_ename
		, is_use, create_date, create_by, update_date, update_by, date_format(create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(update_date, '%Y年%m月%d日 %T') as updateDateFormat 
		from t_series where 1=1
		<if test="ofOrigin != null and ofOrigin != ''">
			and of_origin = #{ofOrigin}
		</if>
		<if test="isUse != null and isUse != ''">
			and is_use = #{isUse}
		</if>
		<if test="(seriesName != null and seriesName != '') or (seriesEname != null and seriesEname != '')">
			and (series_ename = #{seriesEname} or series_name = #{seriesName})
		</if>
		<if test="seriesId != null">
			and series_id != #{seriesId}
		</if>
		order by create_date desc
	</select>
	
	<!-- 根据系列编号查询系列信息 -->
	<select id="querySeriesById" parameterType="java.lang.Integer" resultMap="seriesResultMap">
		select series_id, series_name, series_ename, of_origin, (select brand_name from t_brand where brand_id = t_series.of_origin) as of_origin_name
		, (select brand_ename from t_brand where brand_id = t_series.of_origin) as of_origin_ename
		, is_use, create_date, create_by, update_date, update_by, date_format(create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(update_date, '%Y年%m月%d日 %T') as updateDateFormat 
		from t_series where series_id = #{seriesId}
	</select>
</mapper>