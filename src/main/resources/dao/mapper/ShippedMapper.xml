<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat.manage.shipped.dao.ShippedDao">

	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"></cache>

	<resultMap type="com.cat.manage.shipped.domain.Shipped" id="ShippedResultMap">
		<id property="id" column="id"/>
		<result property="headId" column="head_id"/>
		<result property="checkId" column="check_id"/>
		<result property="trackingNumber" column="tracking_number"/>
		<result property="transferCompany" column="transfer_company"/>
		<result property="brandId" column="brand_id"/>
		<result property="seriesId" column="series_id"/>
		<result property="singleId" column="single_id"/>	
		<result property="num" column="num"/>
		<result property="unitPrice" column="unit_price"/>
		<result property="payby" column="payby"/>
		<result property="planRmb" column="plan_rmb"/>
		<result property="planPostage" column="plan_postage"/>	
		<result property="planCost" column="plan_cost"/>
		<result property="remark" column="remark"/>
		<result property="shippedStatus" column="shipped_status"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="createDateFormat" column="createDateFormat"/>	
		<result property="updateDateFormat" column="updateDateFormat"/>	
		<result property="brandName" column="brand_name"/>	
		<result property="seriesName" column="series_name"/>	
		<result property="singleName" column="single_name"/>	
		<result property="sumPrice" column="sumprice"/>	
	</resultMap>
	
	<!-- 添加邮寄清单（子单） -->
	<insert id="addShipped">
	insert into t_shipped(head_id, check_id, tracking_number, transfer_company, brand_id, series_id, single_id, num, unit_price, payby, plan_rmb, plan_postage, plan_cost, remark, shipped_status, create_date, update_date)
	values(#{param1.id}, #{param3.id}, #{param3.trackingNumber}, #{param3.transferCompany}, #{param3.brandId}, #{param3.seriesId}, #{param3.singleId}, #{param3.num}, #{param3.unitPrice}, #{param3.payby}, #{param2.planRmb}, #{param2.planPostage}, #{param2.planCost}, #{param3.remark}, #{param2.shippedStatus}, now(), now())
	</insert>
	
	<!-- 修改邮寄清单（子单） -->
	<update id="updateShipped" parameterType="com.cat.manage.shipped.domain.Shipped">
	update t_shipped set update_date=now() 
	<if test="headId != null and headId != ''">
		, head_id = #{headId}
	</if>
	<if test="trackingNumber != null and trackingNumber != ''">
		, tracking_number = #{trackingNumber}
	</if>
	<if test="transferCompany != null and transferCompany != ''">
		, transfer_company = #{transferCompany}
	</if>
	<if test="planRmb != null and planRmb != ''">
		, plan_rmb = #{planRmb}
	</if>
	<if test="planPostage != null and planPostage != ''">
		, plan_postage = #{planPostage}
	</if>
	<if test="planCost != null and planCost != ''">
		, plan_cost = #{planCost}
	</if>
	<if test="remark != null and remark != ''">
		, remark = #{remark}
	</if>
	<if test="shippedStatus != null and shippedStatus != ''">
		, shipped_status = #{shippedStatus}
	</if>
	where id = #{id}
	</update>
	
	<!-- 根据邮寄清单子单唯一编号删除记录 -->
	<delete id="deleteShipped" parameterType="java.lang.Integer">
	delete from t_shipped where id = #{id} 
	</delete>
	
	<!-- 根据下单清单唯一编号删除记录 -->
	<delete id="deleteShippedByCheckId" parameterType="java.lang.Integer">
	delete from t_shipped where check_id = #{checkId} 
	</delete>
	
	<!-- 根据邮寄清单主单唯一编号删除子单信息 -->
	<delete id="deleteShippedByHeadId" parameterType="java.lang.Integer">
	delete from t_shipped where head_id = #{headId} 
	</delete>
	
	<!-- 根据邮寄清单子单唯一编号，批量删除记录 -->
	<delete id="deleteShippedByIds">
	delete from t_shipped where id in 
	<foreach collection="array" item="id" open="(" separator="," close=")">#{id}</foreach>
	</delete>
	
	<!-- 查询邮寄清单子单信息 -->
	<select id="queryShipped" resultMap="ShippedResultMap">
	select id, head_id, check_id, tracking_number, transfer_company, brand_id, series_id, single_id, num, unit_price, payby, plan_rmb, plan_postage, plan_cost, remark, shipped_status, create_date, update_date, date_format(create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,(select brand_name from t_brand where brand_id = t.brand_id)	 as brand_name
    ,(select series_name from t_series where series_id = t.series_id) as series_name
    ,(select single_name from t_singleproduct where single_id = t.single_id) as single_name
	, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	where 1=1
	<if test="trackingNumber != null and trackingNumber != ''">
		and tracking_number = #{trackingNumber}
	</if>
	<if test="transferCompany != null and transferCompany != ''">
		and transfer_company = #{transferCompany}
	</if>
	<if test="checkId != null and checkId != ''">
		and check_id = #{checkId}
	</if>
	<if test="headId != null and headId != ''">
		and head_id = #{headId}
	</if>
	<if test="id != null and id != ''">
		and id = #{id}
	</if>
	</select>
	
	<!-- 根据邮寄清单主单唯一编号查询子订单 -->
	<select id="queryShippedByHeadId" resultMap="ShippedResultMap">
	select id, head_id, check_id, tracking_number, transfer_company, brand_id, series_id, single_id, num, unit_price, payby, plan_rmb, plan_postage, plan_cost, remark, shipped_status, create_date, update_date, date_format(create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,(select brand_name from t_brand where brand_id = t.brand_id)	 as brand_name
    ,(select series_name from t_series where series_id = t.series_id) as series_name
    ,(select single_name from t_singleproduct where single_id = t.single_id) as single_name
	, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	where head_id = #{headId}
	</select>
	
	<!-- 根据邮寄清单子单唯一编号查询子单信息 -->
	<select id="queryShippedByIds" resultMap="ShippedResultMap">
	select id, head_id, check_id, tracking_number, transfer_company, brand_id, series_id, single_id, num, unit_price, payby, plan_rmb, plan_postage, plan_cost, remark, shipped_status, create_date, update_date, date_format(create_date, '%Y年%m月%d日 %T') as createDateFormat, date_format(update_date, '%Y年%m月%d日 %T') as updateDateFormat
	,(select brand_name from t_brand where brand_id = t.brand_id)	 as brand_name
    ,(select series_name from t_series where series_id = t.series_id) as series_name
    ,(select single_name from t_singleproduct where single_id = t.single_id) as single_name
	, FORMAT(num*unit_price ,2) as sumprice
	from t_shipped t
	where id in
	<foreach collection="array" item="id" open="(" separator="," close=")">#{id}</foreach>
	</select>
</mapper>